From b778ea29999ea7e27cd82a4371911e2944b6a152 Mon Sep 17 00:00:00 2001
From: Lei Maohui <leimaohui@fujitsu.com>
Date: Fri, 6 Jun 2025 08:42:33 +0000
Subject: [PATCH] Fix build error with gcc15:

procmail.c:213:9: error: too many arguments to function 'doumask'; expected 0, have 1
  213 |         doumask(INIT_UMASK);               /* allowed to set the From_ line? */
      |         ^~~~~~~
In file included from procmail.c:23:
robust.h:12:2: note: declared here
   12 |  doumask Q((const mode_t mask));
      |  ^~~~~~~
procmail.c:229:32: error: too many arguments to function 'allocbuffers'; expected 0, have 2
  229 |         setbuf(stdin,(char*)0);allocbuffers(linebuf,1);
      |                                ^~~~~~~~~~~~ ~~~~~~~
In file included from procmail.c:39:
variables.h:17:2: note: declared here
   17 |  allocbuffers Q((size_t lineb,int setenv)),
      |  ^~~~~~~~~~~~
procmail.c:267:18: error: too many arguments to function 'forkerr'; expected 0, have 2
  267 |               if(forkerr(pidchild,procmailn))
      |                  ^~~~~~~ ~~~~~~~~
In file included from procmail.c:25:
misc.h:49:2: note: declared here
   49 |  forkerr Q((const pid_t pid,const char*const a)),
      |  ^~~~~~~
procmail.c:270:18: error: too many arguments to function 'waitfor'; expected 0, have 1
  270 |                  waitfor(pidchild);
      |                  ^~~~~~~ ~~~~~~~~
In file included from procmail.c:28:
common.h:9:2: note: declared here
    9 |  waitfor Q((const pid_t pid));
      |  ^~~~~~~
procmail.c:294:24: error: too many arguments to function 'forkerr'; expected 0, have 2
  294 |                   { if(forkerr(pidchild,procmailn)||
      |                        ^~~~~~~ ~~~~~~~~
misc.h:49:2: note: declared here
   49 |  forkerr Q((const pid_t pid,const char*const a)),
      |  ^~~~~~~
procmail.c:295:24: error: too many arguments to function 'waitfor'; expected 0, have 1
  295 |                        waitfor(pidchild)!=EXIT_SUCCESS)
      |                        ^~~~~~~ ~~~~~~~~
common.h:9:2: note: declared here
    9 |  waitfor Q((const pid_t pid));
      |  ^~~~~~~
procmail.c:314:15: error: too many arguments to function 'enoughprivs'; expected 0, have 5
  314 | dorcpt:    if(enoughprivs(passinvk,euid,egid,auth_whatuid(pass),
      |               ^~~~~~~~~~~ ~~~~~~~~
misc.h:52:2: note: declared here
   52 |  enoughprivs Q((const auth_identity*const passinvk,const uid_t euid,
      |  ^~~~~~~~~~~
procmail.c:372:25: error: too many arguments to function 'enoughprivs'; expected 0, have 5
      |  ^~~~~~~~~~~
procmail.c:405:9: error: too many arguments to function 'initdefenv'; expected 0, have 3
  405 |         initdefenv(pass,buf,!presenviron||!mailfilter);          /* override */
      |         ^~~~~~~~~~ ~~~~
......

Signed-off-by: Lei Maohui <leimaohui@fujitsu.com>
---
 src/authenticate.h | 2 +-
 src/exopen.c       | 2 +-
 src/includes.h     | 2 +-
 src/misc.h         | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/authenticate.h b/src/authenticate.h
index be9d88d..31e665a 100644
--- a/src/authenticate.h
+++ b/src/authenticate.h
@@ -7,7 +7,7 @@ typedef struct auth_identity auth_identity;
 
 #ifndef P
 #define P(x)	x
-#define Q(x)	()
+#define Q(x)	x
 #endif
 
 /*const*/auth_identity
diff --git a/src/exopen.c b/src/exopen.c
index c7647e5..46e3467 100644
--- a/src/exopen.c
+++ b/src/exopen.c
@@ -51,7 +51,7 @@ static const char*safehost P((void)) /* return a hostname safe for filenames */
   return sname;
 }
 
-int unique(full,p,len,mode,verbos,flags)char*const full;char*p;
+int unique(full,p,len,mode,verbos,flags)const char*const full;char*p;
  const size_t len;const mode_t mode;const int verbos,flags;
 { static const char s2c[]=".,+%";static int serial=STRLEN(s2c);
   static time_t t;char*dot,*end,*host;struct stat filebuf;
diff --git a/src/includes.h b/src/includes.h
index 4466907..bce515d 100644
--- a/src/includes.h
+++ b/src/includes.h
@@ -530,7 +530,7 @@ extern void*memmove();
  * problems caused by one of those types being shorter than int and thereby
  * being passed differently under ANSI rules.
  */
-#define Q(args)		()
+#define Q(args)		args
 
 #ifdef oBRAIN_DAMAGE
 #undef oBRAIN_DAMAGE
diff --git a/src/misc.h b/src/misc.h
index 4f62ebc..df0b7c5 100644
--- a/src/misc.h
+++ b/src/misc.h
@@ -1,5 +1,5 @@
 /*$Id: misc.h,v 1.56 2001/06/30 01:14:19 guenther Exp $*/
-
+#include "authenticate.h"
 struct dyna_array{int filled,tspace;char*vals;};
 union offori{off_t o;int i;};
 
-- 
2.43.0

