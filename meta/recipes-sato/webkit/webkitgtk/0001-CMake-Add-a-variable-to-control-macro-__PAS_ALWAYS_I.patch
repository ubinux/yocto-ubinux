From 73efe0ea75c3ac4cb088f300acc3de44d5dd3344 Mon Sep 17 00:00:00 2001
From: Kai Kang <kai.kang@windriver.com>
Date: Fri, 11 Aug 2023 14:20:48 +0800
Subject: [PATCH] [CMake] Add a variable to control macro
 __PAS_ALWAYS_INLINE_BUT_NOT_INLINE
 https://bugs.webkit.org/show_bug.cgi?id=260065

Reviewed by NOBODY (OOPS!).

It fails to compile webkitgtk with option `-Og` of gcc/g++:

| In file included from Source/bmalloc/libpas/src/libpas/pas_heap_page_provider.h:30,
|                  from Source/bmalloc/libpas/src/libpas/pas_bootstrap_heap_page_provider.h:29,
|                  from Source/bmalloc/libpas/src/libpas/pas_large_heap_physical_page_sharing_cache.h:29,
|                  from Source/bmalloc/libpas/src/libpas/pas_basic_heap_page_caches.h:29,
|                  from Source/bmalloc/libpas/src/libpas/pas_heap_config_utils.h:32,
|                  from Source/bmalloc/libpas/src/libpas/bmalloc_heap_config.h:34,
|                  from Source/bmalloc/libpas/src/libpas/bmalloc_heap_inlines.h:34,
|                  from Source/bmalloc/bmalloc/bmalloc.h:39,
|                  from Source/bmalloc/bmalloc/bmalloc.cpp:26:
| In function 'pas_allocation_result pas_local_allocator_try_allocate(pas_local_allocator*, size_t, size_t, pas_heap_config, pas_allocator_counts*, pas_allocation_result_filter)',
|     inlined from 'pas_allocation_result pas_try_allocate_common_impl_fast(pas_heap_config, pas_allocator_counts*, pas_allocation_result_filter, pas_local_allocator*, size_t, size_t)' at webkitgtk-2.40.2/Source/bmalloc/libpas/src/libpas/pas_try_allocate_common.h:85:46,
|     inlined from 'pas_allocation_result bmalloc_try_allocate_with_alignment_impl_impl_fast(pas_local_allocator*, size_t, size_t)' at webkitgtk-2.40.2/Source/bmalloc/libpas/src/libpas/bmalloc_heap_inlines.h:59:1,
|     inlined from 'pas_allocation_result pas_try_allocate_intrinsic_impl_casual_case(__pas_heap*, size_t, size_t, pas_intrinsic_heap_support*, pas_heap_config, pas_try_allocate_common_fast, pas_try_allocate_common_slow, pas_intrinsic_heap_designation_mode)' at webkitgtk-2.40.2/Source/bmalloc/libpas/src/libpas/pas_try_allocate_intrinsic.h:167:44,
|     inlined from 'pas_allocation_result bmalloc_try_allocate_with_alignment_impl_casual_case(size_t, size_t)' at webkitgtk-2.40.2/Source/bmalloc/libpas/src/libpas/bmalloc_heap_inlines.h:59:1:
| webkitgtk-2.40.2/Source/bmalloc/libpas/src/libpas/pas_allocation_result.h:76:1: error: inlining failed in call to 'always_inline' 'pas_allocation_result pas_allocation_result_identity(pas_allocation_result)': function not considered for inlining
|    76 | pas_allocation_result_identity(pas_allocation_result result)
|       | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Add an variable `WEBKIT_NO_INLINE_HINTS` to control macro
__PAS_ALWAYS_INLINE_BUT_NOT_INLINE whether includes function attribute
`always_inline`. It could set the variable to make compilation pass when
gcc option `-Og` is used.

* Source/bmalloc/libpas/src/libpas/pas_utils_prefix.h:
* Source/cmake/WebKitCompilerFlags.cmake:

Upstream-Status: Submitted [https://github.com/WebKit/WebKit/pull/16601]

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 Source/bmalloc/libpas/src/libpas/pas_utils_prefix.h | 2 +-
 Source/cmake/WebKitCompilerFlags.cmake              | 7 +++++++
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/Source/bmalloc/libpas/src/libpas/pas_utils_prefix.h b/Source/bmalloc/libpas/src/libpas/pas_utils_prefix.h
index 5d5fb38cddbd..a554f70064eb 100644
--- a/Source/bmalloc/libpas/src/libpas/pas_utils_prefix.h
+++ b/Source/bmalloc/libpas/src/libpas/pas_utils_prefix.h
@@ -44,7 +44,7 @@ __PAS_BEGIN_EXTERN_C;
 #define __SUSPICIOUS__
 #define __BROKEN__
 
-#ifdef __OPTIMIZE__
+#if defined(__OPTIMIZE__) && !defined(WEBKIT_NO_INLINE_HINTS)
 #define __PAS_ALWAYS_INLINE_BUT_NOT_INLINE __attribute__((__always_inline__))
 #else
 #define __PAS_ALWAYS_INLINE_BUT_NOT_INLINE
diff --git a/Source/cmake/WebKitCompilerFlags.cmake b/Source/cmake/WebKitCompilerFlags.cmake
index 9b2fecf9a0d3..7cdc2b6afbe0 100644
--- a/Source/cmake/WebKitCompilerFlags.cmake
+++ b/Source/cmake/WebKitCompilerFlags.cmake
@@ -453,3 +453,10 @@ endif ()
 
 # FIXME: Enable pre-compiled headers for all ports <https://webkit.org/b/139438>
 set(CMAKE_DISABLE_PRECOMPILE_HEADERS ON)
+
+# It fails to compile with `gcc -Og`
+set(WEBKIT_NO_INLINE_HINTS OFF CACHE BOOL "Disable funtion attribute always_inline for WebKit")
+
+if (WEBKIT_NO_INLINE_HINTS)
+    add_definitions(-DWEBKIT_NO_INLINE_HINTS)
+endif ()
-- 
2.34.1

