From 8a6c77cdd265fe7ce35929f58f1ade0c6bc4025b Mon Sep 17 00:00:00 2001
From: Nitin A Kamble <nitin.a.kamble@intel.com>
Date: Fri, 13 Aug 2010 12:24:00 -0700
Subject: [PATCH] tcl: fix a build issue

Upstream-Status: Inappropriate [upstream does not support installed tests]

---
 unix/Makefile.in | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

diff --git a/unix/Makefile.in b/unix/Makefile.in
index b110fe9..d7b35a8 100644
--- a/unix/Makefile.in
+++ b/unix/Makefile.in
@@ -814,23 +814,23 @@ tcltest-real:
 test: test-tcl test-packages
 
 test-tcl: ${TCLTEST_EXE}
-	$(SHELL_ENV) ./${TCLTEST_EXE} $(TOP_DIR)/tests/all.tcl $(TESTFLAGS)
+	$(SHELL_ENV) ${TCLTEST_EXE} $(TOP_DIR)/tests/all.tcl $(TESTFLAGS)
 
 gdb-test: ${TCLTEST_EXE}
 	@echo "set env @LD_LIBRARY_PATH_VAR@=`pwd`:$${@LD_LIBRARY_PATH_VAR@}" > gdb.run
 	@echo "set env TCL_LIBRARY=${TCL_BUILDTIME_LIBRARY}" >> gdb.run
 	@echo "set args $(TOP_DIR)/tests/all.tcl $(TESTFLAGS) -singleproc 1" >> gdb.run
-	$(GDB) ./${TCLTEST_EXE} --command=gdb.run
+	$(GDB) ${TCLTEST_EXE} --command=gdb.run
 	rm gdb.run
 
 # Useful target to launch a built tcltest with the proper path,...
 runtest: ${TCLTEST_EXE}
-	$(SHELL_ENV) ./${TCLTEST_EXE}
+	$(SHELL_ENV) ${TCLTEST_EXE}
 
 # Useful target for running the test suite with an unwritable current
 # directory...
 ro-test: ${TCLTEST_EXE}
-	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | $(SHELL_ENV) ./${TCLTEST_EXE}
+	echo 'exec chmod -w .;package require tcltest;tcltest::temporaryDirectory /tmp;source ../tests/all.tcl;exec chmod +w .' | $(SHELL_ENV) ${TCLTEST_EXE}
 
 # The following target generates the shared libraries in dltest/ that are used
 # for testing; they are included as part of the "tcltest" target (via the
@@ -848,28 +848,28 @@ dltest.marker: ${STUB_LIB_FILE}
 # This target can be used to run tclsh from the build directory
 # via `make shell SCRIPT=/tmp/foo.tcl`
 shell: ${TCL_EXE}
-	$(SHELL_ENV) ./${TCL_EXE} $(SCRIPT)
+	$(SHELL_ENV) ${TCL_EXE} $(SCRIPT)
 
 # This target can be used to run tclsh inside either gdb or insight
 gdb: ${TCL_EXE}
-	$(SHELL_ENV) $(GDB) ./${TCL_EXE}
+	$(SHELL_ENV) $(GDB) ${TCL_EXE}
 
 lldb: ${TCL_EXE}
 	$(SHELL_ENV) $(LLDB) ./${TCL_EXE}
 
 valgrind: ${TCL_EXE} ${TCLTEST_EXE}
-	$(SHELL_ENV) $(VALGRIND) $(VALGRINDARGS) ./${TCLTEST_EXE} \
+	$(SHELL_ENV) $(VALGRIND) $(VALGRINDARGS) ${TCLTEST_EXE} \
 		$(TOP_DIR)/tests/all.tcl -singleproc 1 -constraints valgrind \
 		$(TESTFLAGS)
 
 valgrindshell: ${TCL_EXE}
-	$(SHELL_ENV) $(VALGRIND) $(VALGRINDARGS) ./${TCL_EXE} $(SCRIPT)
+	$(SHELL_ENV) $(VALGRIND) $(VALGRINDARGS) ${TCL_EXE} $(SCRIPT)
 
 trace-shell: ${TCL_EXE}
-	$(SHELL_ENV) ${TRACE} $(TRACE_OPTS) ./${TCL_EXE} $(SCRIPT)
+	$(SHELL_ENV) ${TRACE} $(TRACE_OPTS) ${TCL_EXE} $(SCRIPT)
 
 trace-test: ${TCLTEST_EXE}
-	$(SHELL_ENV) ${TRACE} $(TRACE_OPTS) ./${TCLTEST_EXE} $(TOP_DIR)/tests/all.tcl -singleproc 1 $(TESTFLAGS)
+	$(SHELL_ENV) ${TRACE} $(TRACE_OPTS) ${TCLTEST_EXE} $(TOP_DIR)/tests/all.tcl -singleproc 1 $(TESTFLAGS)
 
 #--------------------------------------------------------------------------
 # Installation rules
