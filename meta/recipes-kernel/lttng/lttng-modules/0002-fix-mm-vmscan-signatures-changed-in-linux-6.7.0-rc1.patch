From aee34d916bdae79abcf103ef098cbb2e0c20bf83 Mon Sep 17 00:00:00 2001
From: Kienan Stewart <kstewart@efficios.com>
Date: Mon, 20 Nov 2023 11:33:14 -0500
Subject: [PATCH 2/2] fix: mm, vmscan signatures changed in linux 6.7.0-rc1

See upstream commit:

    commit 3dfbb555c98ac55b9d911f9af0e35014b445fb41
    Author: Vlastimil Babka <vbabka@suse.cz>
    Date:   Thu Sep 14 15:16:39 2023 +0200

        mm, vmscan: remove ISOLATE_UNMAPPED

        This isolate_mode_t flag is effectively unused since 89f6c88a6ab4 ("mm:
        __isolate_lru_page_prepare() in isolate_migratepages_block()") as
        sc->may_unmap is now checked directly (and only node_reclaim has a mode
        that sets it to 0).  The last remaining place is mm_vmscan_lru_isolate
        tracepoint for the isolate_mode parameter.  That one was mainly used to
        indicate the active/inactive mode, which the trace-vmscan-postprocess.pl
        script consumed, but that got silently broken.  After fixing the script by
        the previous patch, it does not need the isolate_mode anymore.  So just
        remove the parameter and with that the whole ISOLATE_UNMAPPED flag.

Upstream-Status: Backport [commit aee34d91]

Signed-off-by: Kienan Stewart <kstewart@efficios.com>
Signed-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
Change-Id: Ie7346886d926a1a9d20bcb1570c587c5e943a1c3
---
 include/instrumentation/events/mm_vmscan.h | 28 +++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

Index: lttng-modules-2.13.10/include/instrumentation/events/mm_vmscan.h
===================================================================
--- lttng-modules-2.13.10.orig/include/instrumentation/events/mm_vmscan.h
+++ lttng-modules-2.13.10/include/instrumentation/events/mm_vmscan.h
@@ -369,7 +369,33 @@ LTTNG_TRACEPOINT_EVENT_MAP(mm_shrink_sla
 )
 #endif
 
-#if (LTTNG_LINUX_VERSION_CODE >= LTTNG_KERNEL_VERSION(4,11,0))
+#if (LTTNG_LINUX_VERSION_CODE >= LTTNG_KERNEL_VERSION(6,7,0))
+LTTNG_TRACEPOINT_EVENT(mm_vmscan_lru_isolate,
+
+	TP_PROTO(int classzone_idx,
+		int order,
+		unsigned long nr_requested,
+		unsigned long nr_scanned,
+		unsigned long nr_skipped,
+		unsigned long nr_taken,
+		int lru
+	),
+
+	TP_ARGS(classzone_idx, order, nr_requested, nr_scanned, nr_skipped,
+		nr_taken, lru
+	),
+
+	TP_FIELDS(
+		ctf_integer(int, classzone_idx, classzone_idx)
+		ctf_integer(int, order, order)
+		ctf_integer(unsigned long, nr_requested, nr_requested)
+		ctf_integer(unsigned long, nr_scanned, nr_scanned)
+		ctf_integer(unsigned long, nr_skipped, nr_skipped)
+		ctf_integer(unsigned long, nr_taken, nr_taken)
+		ctf_integer(int, lru, lru)
+	)
+)
+#elif (LTTNG_LINUX_VERSION_CODE >= LTTNG_KERNEL_VERSION(4,11,0))
 LTTNG_TRACEPOINT_EVENT(mm_vmscan_lru_isolate,
 
 	TP_PROTO(int classzone_idx,
